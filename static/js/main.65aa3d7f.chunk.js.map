{"version":3,"sources":["components/FormStyles/FormStyles.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/SearchContact/SearchContact.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","InputValues","e","currentTarget","value","setState","addContact","preventDefault","props","contactList","alert","onSubmit","id","shortid","generate","resetInputValues","idName","idNumber","className","styles","form","this","labelName","htmlFor","type","onChange","autoComplete","labelNumber","pattern","required","btnForm","Component","СontactList","onDeleted","map","btnList","onClick","SearchContact","containerSearch","labelSearch","inputSearch","App","contacts","filter","contact","valuesFilter","getFilter","filtredValues","toLocaleLowerCase","includes","checkName","newName","some","Object","values","join","deleteContact","contactId","prevState","localStorage","setItem","JSON","stringify","getStorageContact","getItem","parseStorageContact","parse","filtredContact","container","headingForm","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65aa3d7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormStyles_container__2wqZ8\",\"headingForm\":\"FormStyles_headingForm__3YpHl\",\"contactList\":\"FormStyles_contactList__6eGjB\",\"form\":\"FormStyles_form__2IKQ6\",\"labelName\":\"FormStyles_labelName___O_jY\",\"labelNumber\":\"FormStyles_labelNumber__3K-Ds\",\"btnForm\":\"FormStyles_btnForm__sKR-v\",\"containerSearch\":\"FormStyles_containerSearch__2DqUN\",\"btnList\":\"FormStyles_btnList__vrDEQ\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from \"../FormStyles/FormStyles.module.css\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    InputValues = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    addContact = e => {\r\n        e.preventDefault();\r\n        const checkName = this.props.contactList({ name: this.state.name });\r\n        if (checkName) {\r\n            alert(\"You already have this contact name!!\");\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit({\r\n            id: shortid.generate(),\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n        });\r\n\r\n        this.resetInputValues();\r\n    };\r\n\r\n    resetInputValues = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const idName = shortid.generate();\r\n        const idNumber = shortid.generate();\r\n\r\n        return (\r\n            <form className={styles.form} onSubmit={this.addContact}>\r\n                <label className={styles.labelName} htmlFor={idName}>Name</label>\r\n                <input\r\n                    id={idName}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.InputValues}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <label className={styles.labelNumber} htmlFor={idNumber}>Phone number</label>\r\n                <input\r\n                    id={idNumber}\r\n                    type=\"tel\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    onChange={this.InputValues}\r\n                    autoComplete=\"off\"\r\n                    required\r\n                />\r\n                <button className={styles.btnForm} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import PropTypes from 'prop-types';\r\n\r\nimport styles from \"../FormStyles/FormStyles.module.css\";\r\n\r\nfunction СontactList({ contactList, onDeleted }) {\r\n  return (\r\n    <ul className={'js-list'}>\r\n      {contactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            {name}: {number}\r\n            <button\r\n              className={styles.btnList}\r\n              type=\"button\"\r\n              onClick={() => onDeleted(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nСontactList.propTypes = {\r\n    contactList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n\r\n    onDeleted: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default СontactList;","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from \"../FormStyles/FormStyles.module.css\";\r\n\r\nfunction SearchContact({ value, SearchContact }) {\r\n    const id = shortid.generate();\r\n    return (\r\n        <div className={styles.containerSearch}>\r\n            <label className={styles.labelSearch} htmlFor={id}>Search contact by name</label>\r\n            <input\r\n                className={styles.inputSearch}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={SearchContact}\r\n                id={id}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nSearchContact.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    SearchContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchContact;","import Form from \"./components/Form/Form\";\nimport СontactList from \"./components/ContactList/ContactList\";\nimport SearchContact from \"./components/SearchContact/SearchContact\";\nimport React from \"react\";\n\nimport styles from \"./components/FormStyles/FormStyles.module.css\";\n\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contact', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const getStorageContact = localStorage.getItem('contact');\n    const parseStorageContact = JSON.parse(getStorageContact);\n    if (getStorageContact) {\n      this.setState({ contacts: parseStorageContact });\n    }\n  }\n\n  addContact = contact => {\n    this.setState({\n      contacts: [contact, ...this.state.contacts],\n    });\n  };\n\n  valuesFilter = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  getFilter = () => {\n    const { filter, contacts } = this.state;\n    const filtredValues = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filtredValues),\n    );\n  };\n\n  checkName = (newName) => {\n    return this.state.contacts.some(\n      ({ name }) => name === Object.values(newName).join(''),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const filtredContact = this.getFilter();\n    return (\n      <div className={styles.container}>\n        <h1 className={styles.headingForm}>Phone Book</h1>\n        <Form onSubmit={this.addContact} contactList={this.checkName} />\n        <h2 className={styles.contactList}>Contacts</h2>\n        <SearchContact value={this.state.filter} SearchContact={this.valuesFilter} />\n        <СontactList contactList={filtredContact} onDeleted={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}